{"version":3,"file":"wpc-scripts.js","mappings":";;;;;;;;;;;;AAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,SAAS;AACT;AACA;AACA,+DAAe,IAAI,EAAC;;;;;;;;;;;;AC3BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+DAAe,SAAS,EAAC;;;;;;;;;;;;;AC3FiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAW;AAC3B,gBAAgB,yDAAW;AAC3B,aAAa;AACb;AACA;AACA;AACA,+DAAe,IAAI,EAAC;;;;;;;;;;;;;ACjDqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAO;AACnB,SAAS;AACT;AACA;AACA,+DAAe,KAAK,EAAC;;;;;;;;;;;;;AC3BrB,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAM;AAClB;AACA;AACA,mCAAmC,qDAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAO;AACvB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,IAAI,EAAC;;;;;;;;;;;;;AC9F6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sCAAsC;AACpE,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAM;AAC9B;AACA;AACA,wBAAwB,qDAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAO;AAC/B;AACA;AACA,wBAAwB,oDAAM;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+DAAe,MAAM,EAAC;;;;;;;;;;;;;;AC1DtB,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACoD;AAC+B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB,gFAAgF;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,oBAAoB,oDAAM;AAC1B;AACA;AACA;AACA;AACA,4BAA4B,gEAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yDAAW;AACvB,YAAY,yDAAW;AACvB,YAAY,wDAAU;AACtB;AACA,SAAS;AACT;AACA;AACA,+DAAe,MAAM,EAAC;;;;;;;;;;;;;AC7G2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAO;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA,+DAAe,KAAK,EAAC;;;;;;;;;;;;ACrCrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,IAAI,EAAC;;;;;;;;;;;;;AClDyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yDAAW;AAC/B;AACA;AACA;AACA,oBAAoB,yDAAW;AAC/B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+DAAe,MAAM,EAAC;;;;;;;;;;;;AC/DtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+DAAe,KAAK,EAAC;;;;;;;;;;;;AC3IrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,MAAM,EAAC;;;;;;;;;;;;;;;;AC9Bf;AACP;AACA;AACA,wDAAwD,kBAAkB;AAC1E,sDAAsD,gBAAgB;AACtE,uDAAuD,iBAAiB;AACxE,qDAAqD,eAAe;AACpE;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;;ACnBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4CAA4C,mEAAiB;AACpE;AACA;AACA;AACA;AACA,iBAAiB,uEAAqB;AACtC;AACA;AACA;AACA;AACA,sBAAsB,mEAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7LO;AACP;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;;;;;;;UCLA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACgC;AACI;AACJ;AACE;AACF;AACI;AACA;AACF;AACF;AACQ;AACF;AACE;AACyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yDAAM,EAAE,0DAAM,EAAE,yDAAK,EAAE,mDAAI,EAAE,qDAAM,EAAE,qDAAM,EAAE,mDAAI,EAAE,oDAAK,EAAE,mDAAI,EAAE,kDAAS,EAAE,oDAAK,EAAE,mDAAI;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAgB;AACxB;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAY;AACpB;AACA;AACA;AACA","sources":["webpack://wp-components/./src/assets/js/atoms/cart.ts","webpack://wp-components/./src/assets/js/atoms/map.ts","webpack://wp-components/./src/assets/js/atoms/menu.ts","webpack://wp-components/./src/assets/js/atoms/modal.ts","webpack://wp-components/./src/assets/js/atoms/rate.ts","webpack://wp-components/./src/assets/js/atoms/scroll.ts","webpack://wp-components/./src/assets/js/atoms/search.ts","webpack://wp-components/./src/assets/js/atoms/share.ts","webpack://wp-components/./src/assets/js/atoms/tabs.ts","webpack://wp-components/./src/assets/js/molecules/header.ts","webpack://wp-components/./src/assets/js/molecules/posts.ts","webpack://wp-components/./src/assets/js/molecules/slider.ts","webpack://wp-components/./src/assets/js/other/modules.ts","webpack://wp-components/./src/assets/js/other/utils.ts","webpack://wp-components/./src/assets/js/types/sibling-types.ts","webpack://wp-components/webpack/bootstrap","webpack://wp-components/webpack/runtime/define property getters","webpack://wp-components/webpack/runtime/hasOwnProperty shorthand","webpack://wp-components/webpack/runtime/make namespace object","webpack://wp-components/./src/assets/js/scripts.ts"],"sourcesContent":["import { FadeToggle } from \"../other/utils\";\r\n/**\r\n * Defines a social share element\r\n */\r\nconst Cart = {\r\n    elements: document.getElementsByClassName('atom-cart-icon'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const cartElement of this.elements) {\r\n            this.cartHandler(cartElement);\r\n        }\r\n    },\r\n    /**\r\n     * Handles any cart related actions\r\n     *\r\n     * @param cart HTMLElement The passed cart element\r\n     */\r\n    cartHandler(cart) {\r\n        cart.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            const cartContent = cart.nextElementSibling;\r\n            FadeToggle(cartContent);\r\n        });\r\n    }\r\n};\r\nexport default Cart;\r\n","/**\r\n * Creates a Google Map\r\n */\r\nconst CustomMap = {\r\n    elements: document.getElementsByClassName('atom-map'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const mapElement of this.elements) {\r\n            this.setupMap(mapElement);\r\n        }\r\n    },\r\n    /**\r\n     * Setup a map\r\n     * @param map The element for the map container\r\n     */\r\n    setupMap(mapElement) {\r\n        if (typeof window.google === 'undefined') {\r\n            return;\r\n        }\r\n        const canvas = mapElement.querySelector('.components-maps-canvas');\r\n        if (!canvas) {\r\n            return;\r\n        }\r\n        const attributes = window[canvas.dataset.id];\r\n        const center = new google.maps.LatLng(parseFloat(attributes.center.lat), parseFloat(attributes.center.lng));\r\n        const mapInstance = new google.maps.Map(canvas, {\r\n            center,\r\n            scrollwheel: false,\r\n            styles: typeof attributes.styles !== 'undefined' ? attributes.styles : '',\r\n            zoom: parseInt(attributes.zoom)\r\n        });\r\n        // The map instance is accessible through the global scope\r\n        window[canvas.dataset.id].map = mapInstance;\r\n        if (attributes.markers) {\r\n            this.setupMapMarkers(mapInstance, attributes.markers, attributes.fit, center);\r\n        }\r\n    },\r\n    /**\r\n     * Setup markers in a map\r\n     *\r\n     * @param map The map instance\r\n     * @param markers The unformatted marker input\r\n     * @param fit Whether the markers should fit inside the map canvas\r\n     * @param center The map center\r\n     */\r\n    setupMapMarkers(map, markers, fit, center) {\r\n        const bounds = new google.maps.LatLngBounds();\r\n        const markerInstances = [];\r\n        markers.forEach((marker, index) => {\r\n            let geocoder = null;\r\n            let markerLatLng = null;\r\n            markerInstances[index] = new google.maps.Marker({\r\n                draggable: false,\r\n                icon: typeof marker.icon !== 'undefined' ? marker.icon : '',\r\n                map\r\n            });\r\n            // Geocode our marker when it has an address\r\n            if (typeof marker.address !== 'undefined' && marker.address) {\r\n                geocoder = geocoder !== null ? geocoder : new google.maps.Geocoder();\r\n                geocoder.geocode({ 'address': marker.address }, (results, status) => {\r\n                    if (status === 'OK') {\r\n                        markerLatLng = results[0].geometry.location;\r\n                    }\r\n                    else if (status !== 'OK' && window.wpc.debug) {\r\n                        console.log('Geocoding of a map marker was not successfull: ' + status);\r\n                    }\r\n                });\r\n            }\r\n            else if (marker.lat && marker.lng) {\r\n                markerLatLng = new google.maps.LatLng(parseFloat(marker.lat), parseFloat(marker.lng));\r\n            }\r\n            if (markerLatLng !== null) {\r\n                markerInstances[index].setPosition(markerLatLng);\r\n                bounds.extend(markerLatLng);\r\n            }\r\n        });\r\n        if (markerInstances.length < 1 || !fit) {\r\n            return;\r\n        }\r\n        bounds.extend(center);\r\n        map.fitBounds(bounds);\r\n        // Define the minimum zoom to 15, even after bounds have changed\r\n        google.maps.event.addListenerOnce(map, 'bounds_changed', () => {\r\n            if (map.getZoom() > 15) {\r\n                this.setZoom(15);\r\n            }\r\n        });\r\n    }\r\n};\r\nexport default CustomMap;\r\n","import { SlideToggle, ToggleClass } from \"../other/utils\";\r\n/**\r\n * Defines the custom menu scripts\r\n */\r\nconst Menu = {\r\n    elements: document.getElementsByClassName('atom-menu'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const menu of this.elements) {\r\n            this.setupHamburgerMenu(menu);\r\n            this.setupCollapsedMenu(menu);\r\n        }\r\n    },\r\n    /**\r\n     * Sets the click handler for the hamburger menu\r\n     * @param menu The given menu element\r\n     */\r\n    setupHamburgerMenu(menu) {\r\n        const hamburgerMenu = menu.querySelector('.atom-menu-hamburger');\r\n        const menuWrapper = menu.querySelector('.menu');\r\n        hamburgerMenu.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            menu.classList.toggle('atom-menu-expanded');\r\n            hamburgerMenu.classList.toggle('active');\r\n            menuWrapper.classList.toggle('active');\r\n        });\r\n    },\r\n    /**\r\n     * Sets up the handlers for collapsed menus\r\n     * @param menu The given menu element\r\n     */\r\n    setupCollapsedMenu(menu) {\r\n        var _a;\r\n        if (!menu.classList.contains('atom-menu-collapse')) {\r\n            return;\r\n        }\r\n        const menuItemsWithChildren = menu.querySelectorAll('.menu-item-has-children > a');\r\n        for (const menuItemAnchor of menuItemsWithChildren) {\r\n            const subMenu = (_a = menuItemAnchor.parentElement) === null || _a === void 0 ? void 0 : _a.querySelector('.sub-menu');\r\n            menuItemAnchor.addEventListener('click', (event) => {\r\n                event.preventDefault();\r\n                ToggleClass(menuItemAnchor, 'active');\r\n                SlideToggle(subMenu);\r\n            });\r\n        }\r\n    }\r\n};\r\nexport default Menu;\r\n","import { FadeOut } from \"../other/utils\";\r\n/**\r\n * Defines the custom header scripts\r\n */\r\nconst Modal = {\r\n    elements: document.getElementsByClassName('atom-modal'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const modal of this.elements) {\r\n            this.setupClickHandler(modal);\r\n        }\r\n    },\r\n    /**\r\n     * Setup the click handler for closing modal\r\n     *\r\n     * @param modal The modal element\r\n     */\r\n    setupClickHandler(modal) {\r\n        const closeModal = modal.querySelector('.atom-modal-close');\r\n        closeModal.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            FadeOut(modal);\r\n        });\r\n    }\r\n};\r\nexport default Modal;\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { AjaxApi, FadeIn, FadeOut } from \"../other/utils\";\r\n/**\r\n * Defines the custom header scripts\r\n */\r\nconst Rate = {\r\n    elements: document.getElementsByClassName('atom-rate'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const element of this.elements) {\r\n            this.setupClickHandler(element);\r\n        }\r\n    },\r\n    /**\r\n     * Setup the click handler for sending rating requests to the back-end\r\n     * @param element The specific rating element\r\n     */\r\n    setupClickHandler(element) {\r\n        let isRating = false;\r\n        const ratingAnchor = element.querySelector('.atom-rate-can .atom-rate-anchor');\r\n        ratingAnchor.addEventListener('click', (event) => __awaiter(this, void 0, void 0, function* () {\r\n            event.preventDefault();\r\n            if (isRating) {\r\n                return;\r\n            }\r\n            const { id = '', max = 5, min = 1 } = element.dataset;\r\n            const starElements = ratingAnchor.querySelectorAll('.atom-rate-star');\r\n            let rating = 0;\r\n            for (const starElement of starElements) {\r\n                if (getComputedStyle(starElement).fontWeight === '900') {\r\n                    rating++;\r\n                }\r\n            }\r\n            const loadingSpinner = element.querySelector('.atom-rate-can .fa-circle-notch');\r\n            FadeIn(loadingSpinner, 'inline-block');\r\n            // Actual rating functions\r\n            isRating = true;\r\n            const response = yield AjaxApi({\r\n                action: 'public_rate',\r\n                id: id,\r\n                max: +max,\r\n                min: +min,\r\n                rating: rating\r\n            });\r\n            // Modify our stars according to the rating\r\n            if (response.success && response.data.rating) {\r\n                this.updateStarElementClasses(starElements, response.data.rating);\r\n            }\r\n            setTimeout(() => {\r\n                FadeOut(loadingSpinner);\r\n                isRating = false;\r\n            }, 1500);\r\n        }));\r\n    },\r\n    /**\r\n     * Updates the star element classes according to the new rating, without needing to replace the element\r\n     */\r\n    updateStarElementClasses(starElements, rating) {\r\n        let starKey = 0;\r\n        let newRating = Math.ceil(rating);\r\n        for (const starElement of starElements) {\r\n            starKey++;\r\n            if (starKey < newRating) {\r\n                starElement.classList.add('fas');\r\n                starElement.classList.remove('far');\r\n            }\r\n            else if (starKey === newRating) {\r\n                const fraction = rating - Math.floor(rating);\r\n                if (fraction > 0.25 && fraction < 0.75) {\r\n                    starElement.classList.add('fas', 'fa-star-half');\r\n                    starElement.classList.remove('far', 'fa-star');\r\n                }\r\n                else if (fraction > 0.75) {\r\n                    starElement.classList.remove('far', 'fa-star-half');\r\n                    starElement.classList.add('fas');\r\n                }\r\n            }\r\n            else {\r\n                starElement.classList.add('far', 'fa-star');\r\n                starElement.classList.remove('fas', 'fa-star-half');\r\n            }\r\n        }\r\n    }\r\n};\r\nexport default Rate;\r\n","import { FadeIn, FadeOut } from '../other/utils';\r\nconst Scroll = {\r\n    elements: document.getElementsByClassName('atom-scroll'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const element of this.elements) {\r\n            this.setupScrollHandler(element);\r\n        }\r\n        this.setupwindowHandler();\r\n    },\r\n    /**\r\n     * Setup our scroll button\r\n     * @param element The scroll element\r\n     */\r\n    setupScrollHandler(element) {\r\n        const parent = element.parentElement;\r\n        let destination;\r\n        element.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            if (element.classList.contains('atom-scroll-top')) {\r\n                destination = 0;\r\n            }\r\n            else {\r\n                destination = (parent === null || parent === void 0 ? void 0 : parent.clientHeight) + parent.getBoundingClientRect().top + window.scrollY;\r\n            }\r\n            window.scrollTo({ top: destination, behavior: 'smooth' });\r\n        });\r\n    },\r\n    /**\r\n     * Setup the handler for the window functions\r\n     */\r\n    setupwindowHandler() {\r\n        window.addEventListener('scroll', () => {\r\n            let scrollPosition = window.scrollY;\r\n            for (const element of this.elements) {\r\n                if (element.classList.contains('atom-scroll-top')) {\r\n                    if (scrollPosition > window.innerHeight) {\r\n                        FadeIn(element);\r\n                    }\r\n                    else {\r\n                        FadeOut(element);\r\n                    }\r\n                }\r\n                else {\r\n                    let buttonPosition = element.getBoundingClientRect().top + scrollPosition;\r\n                    if (scrollPosition > buttonPosition) {\r\n                        FadeOut(element);\r\n                    }\r\n                    else {\r\n                        FadeIn(element);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nexport default Scroll;\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { InitScrollReveal } from \"../other/modules\";\r\nimport { ToggleClass, FadeToggle, FadeOut, AjaxApi, FadeIn } from \"../other/utils\";\r\n/**\r\n * Custom scripts for a search element\r\n * If enabled, the script will loads results through ajax\r\n */\r\nconst Search = {\r\n    elements: document.getElementsByClassName('atom-search'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const element of this.elements) {\r\n            this.setupSearch(element);\r\n        }\r\n    },\r\n    /**\r\n     * Setups the tabs for each element existing on a page\r\n     * @param element The search element\r\n     */\r\n    setupSearch(element) {\r\n        if (element.classList.contains('atom-search-ajax')) {\r\n            this.setupAjaxSearch(element);\r\n        }\r\n        this.setupToggleSearch(element);\r\n    },\r\n    /**\r\n     * Setups the ajax search functionality for the given element\r\n     * @param element The search element\r\n     */\r\n    setupAjaxSearch(element) {\r\n        const { appear = 'bottom', delay = 300, length = 3, none = '', number = 5, types = '' } = element.dataset;\r\n        const searchForm = document.querySelector('.search-form');\r\n        const searchField = document.querySelector('.search-field');\r\n        const moreAnchor = document.querySelector('.atom-search-all');\r\n        const results = document.querySelector('.atom-search-results');\r\n        const loadingIcon = document.createElement('<i class=\"fa fa-spin fa-circle-o-notch\"></i>');\r\n        let timer;\r\n        let value;\r\n        if (!element.classList.contains('atom-search-ajax')) {\r\n            FadeOut(results);\r\n            return;\r\n        }\r\n        searchField.addEventListener('keyup', (event) => {\r\n            clearTimeout(timer);\r\n            const currentSearchField = event.currentTarget;\r\n            if (currentSearchField.value.length <= length || value === currentSearchField.value) {\r\n                return;\r\n            }\r\n            timer = setTimeout(() => __awaiter(this, void 0, void 0, function* () {\r\n                var _a, _b;\r\n                value = currentSearchField.value;\r\n                moreAnchor.href = moreAnchor.href + encodeURI(value);\r\n                results.classList.add('components-loading');\r\n                (_a = results.querySelector('.atom-search-all')) === null || _a === void 0 ? void 0 : _a.remove();\r\n                searchForm.append(loadingIcon);\r\n                const response = yield AjaxApi({\r\n                    action: 'public_search',\r\n                    appear: appear,\r\n                    none: none,\r\n                    number: number,\r\n                    search: value,\r\n                    types: types\r\n                });\r\n                if (response.success) {\r\n                    FadeIn(results);\r\n                    results.innerHTML = response.data;\r\n                    results.append(moreAnchor);\r\n                    if (typeof window.sr !== 'undefined') {\r\n                        if (window.sr.initialized === false) {\r\n                            InitScrollReveal();\r\n                        }\r\n                        window.sr.sync();\r\n                    }\r\n                }\r\n                (_b = searchForm.querySelector('.fa-circle-o-notch')) === null || _b === void 0 ? void 0 : _b.remove();\r\n                results.classList.remove('components-loading');\r\n            }), +delay);\r\n        });\r\n    },\r\n    /**\r\n     * Allows the search-form to be toggled\r\n     * @param element The search element\r\n     */\r\n    setupToggleSearch(element) {\r\n        const searchExpandElement = element.querySelector('.atom-search-expand');\r\n        if (!searchExpandElement) {\r\n            return;\r\n        }\r\n        const searchForm = element.querySelector('.atom-search-expand');\r\n        const searchField = searchForm.querySelector('.search-field');\r\n        searchExpandElement.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            ToggleClass(element, 'atom-search-expanded');\r\n            ToggleClass(searchExpandElement.querySelector('.fa'), ['fa-search', 'fa-times']);\r\n            FadeToggle(searchForm);\r\n            searchField.focus();\r\n        });\r\n    }\r\n};\r\nexport default Search;\r\n","import { FadeIn, FadeOut } from \"../other/utils\";\r\n/**\r\n * Defines a social share element\r\n */\r\nconst Share = {\r\n    elements: document.getElementsByClassName('atom-share-fixed'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        this.setupShare();\r\n    },\r\n    /**\r\n     * Setup our sharing functionalities\r\n     */\r\n    setupShare() {\r\n        if (document.documentElement.scrollHeight < window.innerHeight) {\r\n            return;\r\n        }\r\n        let scrolled = false;\r\n        window.addEventListener('scroll', () => {\r\n            let scrollPosition = window.scrollY;\r\n            if (scrollPosition > 5 && !scrolled) {\r\n                for (const element of this.elements) {\r\n                    FadeIn(element);\r\n                }\r\n                scrolled = true;\r\n            }\r\n            else if (scrollPosition < 5 && scrolled) {\r\n                scrolled = false;\r\n                for (const element of this.elements) {\r\n                    FadeOut(element);\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nexport default Share;\r\n","const Tabs = {\r\n    elements: document.getElementsByClassName('atom-tabs'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const element of this.elements) {\r\n            this.setupTabs(element);\r\n        }\r\n    },\r\n    /**\r\n     * Setups the tabs for each element existing on a page\r\n     * @param element The tab element\r\n     */\r\n    setupTabs(element) {\r\n        const buttons = element.querySelectorAll('.atom-tabs-navigation a');\r\n        for (const button of buttons) {\r\n            button.addEventListener('click', (event) => {\r\n                this.clickHandler(event, buttons, element);\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * Handles clicking a tab\r\n     *\r\n     * @param event The event for the click\r\n     * @param buttons The list of all buttons\r\n     * @param element The parent element\r\n     */\r\n    clickHandler(event, buttons, element) {\r\n        const clickedButton = event.currentTarget;\r\n        // The tab links to a regular url\r\n        if (clickedButton.href !== '#') {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        const sections = element.querySelectorAll('.atom-tabs-content section');\r\n        const targetSection = element.querySelector('.atom-tabs-content section[data-id=\"' + clickedButton.dataset.target + '\"]');\r\n        // Reset other buttons and classes\r\n        for (const section of sections) {\r\n            section.classList.remove('active');\r\n        }\r\n        for (const button of buttons) {\r\n            button.classList.remove('active');\r\n        }\r\n        // Make our targets active\r\n        clickedButton.classList.add('active');\r\n        targetSection.classList.add('active');\r\n    }\r\n};\r\nexport default Tabs;\r\n","import { SlideToggle } from \"../other/utils\";\r\nconst Header = {\r\n    elements: document.getElementsByClassName('molecule-header'),\r\n    carts: document.querySelectorAll('.molecule-header .atom-cart-icon'),\r\n    position: window.scrollY,\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const header of this.elements) {\r\n            this.cssHandler(header);\r\n            this.scrollHandler(header);\r\n        }\r\n    },\r\n    /**\r\n     * Set-up necessary css adjustments\r\n     *\r\n     * @param header HTML Element The passed header\r\n     */\r\n    cssHandler(header) {\r\n        /**\r\n         * Adapts the top-padding for the main section that follows the header, so it won't overlap\r\n         */\r\n        if (header.classList.contains('molecule-header-fixed')) {\r\n            const height = header.clientHeight;\r\n            const mainElement = header.nextElementSibling;\r\n            if (mainElement.tagName === 'main') {\r\n                mainElement.style.paddingTop = height + 'px';\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * Handles any scroll-related events to the selected header\r\n     * @param header HTMLElement The given header\r\n     */\r\n    scrollHandler(header) {\r\n        let up = false;\r\n        window.addEventListener('scroll', () => {\r\n            let positionFromTop = window.scrollY;\r\n            if (header.classList.contains('molecule-header-fixed')) {\r\n                if (positionFromTop > 5) {\r\n                    header.classList.add('molecule-header-scrolled');\r\n                    header.classList.remove('molecule-header-top');\r\n                }\r\n                else {\r\n                    header.classList.remove('molecule-header-scrolled');\r\n                    header.classList.add('molecule-header-top');\r\n                }\r\n            }\r\n            if (header.classList.contains('molecule-header-headroom')) {\r\n                if (positionFromTop > this.position && !up) {\r\n                    up = !up;\r\n                    SlideToggle(header);\r\n                }\r\n                else if (positionFromTop < this.position && up) {\r\n                    up = !up;\r\n                    SlideToggle(header);\r\n                }\r\n                this.position = positionFromTop;\r\n            }\r\n        });\r\n    }\r\n};\r\nexport default Header;\r\n","const Posts = {\r\n    parser: new DOMParser,\r\n    elements: document.getElementsByClassName('molecule-posts'),\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const element of this.elements) {\r\n            this.setupInfiniteScroll(element);\r\n            this.setupPagination(element);\r\n        }\r\n    },\r\n    /**\r\n     * Setups infinite scroll for the posts element\r\n     * @param element The post wrapper element\r\n     */\r\n    setupInfiniteScroll(element) {\r\n        if (!element.classList.contains('molecule-posts-infinite')) {\r\n            return;\r\n        }\r\n        const pagination = element.querySelector('.atom-pagination');\r\n        if (pagination) {\r\n            pagination.style.display = \"none\";\r\n        }\r\n        const paginationNumberElements = element.querySelectorAll('.atom-pagination .page-numbers');\r\n        const containerId = element.dataset.id;\r\n        const containerPosition = element.getBoundingClientRect().top;\r\n        let pageNumber = 1;\r\n        let loading = false; // Determines if we are loading or when all pages are load.\r\n        window.addEventListener('scroll', () => {\r\n            let url = '';\r\n            if (loading) {\r\n                return;\r\n            }\r\n            let windowPosition = window.innerHeight + window.scrollY;\r\n            let postsPosition = element.clientHeight + containerPosition;\r\n            if (windowPosition < postsPosition || paginationNumberElements.length < 1) {\r\n                return;\r\n            }\r\n            pageNumber++;\r\n            for (let key in paginationNumberElements) {\r\n                if (!paginationNumberElements[key].textContent) {\r\n                    continue;\r\n                }\r\n                const paginationNumber = paginationNumberElements[key].textContent;\r\n                if (parseInt(paginationNumber) === pageNumber) {\r\n                    url = paginationNumberElements[key].href;\r\n                    loading = true;\r\n                }\r\n            }\r\n            if (!url.includes(window.location.origin)) {\r\n                return;\r\n            }\r\n            // No more pages to load\r\n            if (!url) {\r\n                loading = true;\r\n                return;\r\n            }\r\n            fetch(url, {})\r\n                .then((response) => {\r\n                return response.text();\r\n            })\r\n                .then((response) => {\r\n                const posts = this.parser.parseFromString(response, 'text/html').querySelectorAll('.molecule-posts[data-id=\"' + containerId + '\"] .molecule-post');\r\n                const postsWrapper = element.querySelector('.molecule-posts-wrapper');\r\n                for (let key in posts) {\r\n                    postsWrapper.appendChild(posts[key]);\r\n                }\r\n                loading = false;\r\n                if (typeof window.sr !== 'undefined') {\r\n                    window.sr.sync();\r\n                }\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * Setup regular, dynamic pagination for the post wrapper element\r\n     * @param element The post wrapper element\r\n     */\r\n    setupPagination(element) {\r\n        if (!element.classList.contains('molecule-posts-ajax')) {\r\n            return;\r\n        }\r\n        const paginationAnchors = element.querySelectorAll('.atom-pagination a');\r\n        if (paginationAnchors.length < 1) {\r\n            return;\r\n        }\r\n        for (let key in paginationAnchors) {\r\n            paginationAnchors[key].addEventListener('click', (event) => {\r\n                event.preventDefault();\r\n                this.paginationClickHandler(element, paginationAnchors[key]);\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * Adds the click handler to any generated content\r\n     * @param element The parent element to which the button belongs\r\n     * @param anchor The button that is clicked\r\n     */\r\n    paginationClickHandler(element, anchor) {\r\n        const target = anchor.href;\r\n        if (!target.includes(window.location.origin)) {\r\n            return;\r\n        }\r\n        element.classList.add('components-loading');\r\n        // Fetch the target page\r\n        fetch(target)\r\n            .then((response) => {\r\n            return response.text();\r\n        })\r\n            .then((response) => {\r\n            const responseDom = this.parser.parseFromString(response, 'text/html');\r\n            const oldPagination = element.querySelector('.molecule-posts-wrapper');\r\n            const oldPosts = element.querySelector('.molecule-posts-wrapper');\r\n            const newPagination = responseDom.querySelector('.molecule-posts[data-id=\"' + element.dataset.id + '\"] .atom-pagination');\r\n            const newPosts = responseDom.querySelector('.molecule-posts[data-id=\"' + element.dataset.id + '\"] .molecule-posts-wrapper');\r\n            element.classList.remove('components-loading');\r\n            if (oldPagination) {\r\n                oldPagination.outerHTML = newPagination;\r\n            }\r\n            if (oldPosts) {\r\n                oldPosts.outerHTML = newPosts;\r\n            }\r\n            // Jquery animate\r\n            setTimeout(() => {\r\n                window.scrollBy({\r\n                    top: element.getBoundingClientRect().top,\r\n                    behavior: 'smooth'\r\n                });\r\n            }, 500);\r\n            // Sync our scroll-reveal from the global object\r\n            if (typeof window.sr !== \"undefined\") {\r\n                sr.sync();\r\n            }\r\n            // Because our dom is reconstructed, we need to setup pagination again for the given element\r\n            this.setupPagination(element);\r\n        });\r\n    }\r\n};\r\nexport default Posts;\r\n","const Slider = {\r\n    elements: document.getElementsByClassName('molecule-slider'),\r\n    instances: {},\r\n    init() {\r\n        if (!this.elements || this.elements.length < 1) {\r\n            return;\r\n        }\r\n        for (const elements of this.elements) {\r\n            this.createInstance(elements);\r\n        }\r\n    },\r\n    /**\r\n     * Creates a slider instance from a HTMLElemenmt\r\n     * @param slider The slider wrapper\r\n     */\r\n    createInstance(slider) {\r\n        if (typeof window.tns === \"undefined\") {\r\n            return;\r\n        }\r\n        const id = slider.dataset.id;\r\n        if (!id) {\r\n            return;\r\n        }\r\n        const options = window['slider' + id];\r\n        if (typeof options === \"undefined\") {\r\n            return;\r\n        }\r\n        this.instances[id] = tns(options);\r\n    }\r\n};\r\nexport default Slider;\r\n","export function InitScrollReveal() {\r\n    if (typeof window.ScrollReveal !== \"undefined\") {\r\n        window.sr = ScrollReveal();\r\n        window.sr.reveal('.components-bottom-appear', { origin: 'bottom' }, 50);\r\n        window.sr.reveal('.components-left-appear', { origin: 'left' }, 50);\r\n        window.sr.reveal('.components-right-appear', { origin: 'right' }, 50);\r\n        window.sr.reveal('.components-top-appear', { origin: 'top' }, 50);\r\n    }\r\n}\r\nexport function InitParallax() {\r\n    window.addEventListener('scroll', () => {\r\n        let scrollPosition = window.scrollY;\r\n        const parallaxSections = document.getElementsByClassName('components-parallax');\r\n        if (parallaxSections.length > 0) {\r\n            for (let key in parallaxSections) {\r\n                parallaxSections[key].style.backgroundPosition = 'calc(50%) ' + 'calc(50% + ' + (scrollPosition / 5) + \"px\" + ')';\r\n            }\r\n        }\r\n    });\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { SiblingTypes } from \"../types/sibling-types\";\r\n/**\r\n * Sends a post request to the default WordPress Ajax API endpoint\r\n *\r\n * @param data The data that needs to passed to the ajax endpoint\r\n * @returns Promise The json response from the fetched resource\r\n */\r\nexport function AjaxApi(data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (typeof data.nonce === 'undefined') {\r\n            data.nonce = window.wpc.nonce;\r\n        }\r\n        // Non-rest api calls using admin-ajax use FormData.\r\n        const body = new FormData();\r\n        for (const key in data) {\r\n            body.append(key, data[key]);\r\n        }\r\n        const response = yield fetch(window.wpc.ajaxUrl, {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            body\r\n        });\r\n        const jsonResponse = response.json();\r\n        if (window.wpc.debug) {\r\n            console.log(jsonResponse);\r\n        }\r\n        return jsonResponse;\r\n    });\r\n}\r\n/**\r\n * Toggles the display of an HTML Element by sliding its height\r\n *\r\n * @param element An HTML Element that needs to slide\r\n * @param displayStyle The display value that needs to used for displaying the item\r\n */\r\nexport function SlideToggle(element, displayStyle = 'block') {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (getComputedStyle(element).display === 'none') {\r\n        SlideOut(element, displayStyle);\r\n    }\r\n    else {\r\n        SlideIn(element);\r\n    }\r\n}\r\n/**\r\n * Exposes the display of an HTML Element by sliding its height out\r\n *\r\n * @param element An HTML Element that needs to slide\r\n * @param displayStyle The display value that needs to used for displaying the item\r\n */\r\nexport function SlideOut(element, displayStyle = 'block') {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    element.classList.add('components-transition');\r\n    element.style.display = displayStyle;\r\n    element.style.removeProperty('height');\r\n    // Grab and reset the height and opacity\r\n    let elementHeight = element.clientHeight;\r\n    element.style.height = '0px';\r\n    element.style.opacity = '0';\r\n    setTimeout(() => {\r\n        element.style.opacity = '1';\r\n        element.style.height = elementHeight + 'px';\r\n    }, 0);\r\n}\r\n/**\r\n * Hides the display of an HTML Element by sliding its height in\r\n *\r\n * @param element An HTML Element that needs to slide\r\n */\r\nexport function SlideIn(element) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    element.classList.add('components-transition');\r\n    element.style.opacity = '1';\r\n    setTimeout(() => {\r\n        element.style.height = '0px';\r\n        element.style.opacity = '0';\r\n    }, 0);\r\n    setTimeout(() => {\r\n        element.style.display = 'none';\r\n        element.classList.remove('components-transition');\r\n    }, 350);\r\n}\r\n/**\r\n * Toggles the display of an HTML Element by adjusting it's opacity\r\n *\r\n * @param element An HTML Element that needs to slide\r\n * @param displayStyle The display value that needs to used for displaying the item\r\n */\r\nexport function FadeToggle(element, displayStyle = 'block') {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    // FadeIn\r\n    if (getComputedStyle(element).display === 'none') {\r\n        FadeIn(element, displayStyle);\r\n    }\r\n    else {\r\n        FadeOut(element);\r\n    }\r\n}\r\n/**\r\n * Toggles the display of an HTML Element by fading out\r\n *\r\n * @param element An HTML Element that needs to slide\r\n */\r\nexport function FadeOut(element) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    element.classList.add('components-transition');\r\n    element.style.opacity = \"0\";\r\n    setTimeout(() => {\r\n        element.style.display = \"none\";\r\n        element.classList.remove('components-transition');\r\n    }, 350);\r\n}\r\n/**\r\n * Toggles the display of an HTML Element by fading in.\r\n * The element should previously be faded out.\r\n *\r\n * @param element An HTML Element that needs to slide\r\n * @param displayStyle The display value that needs to used for displaying the item\r\n */\r\nexport function FadeIn(element, displayStyle = 'block') {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    element.style.display = displayStyle;\r\n    element.style.opacity = \"0\";\r\n    element.classList.add('components-transition');\r\n    setTimeout(() => {\r\n        element.style.opacity = \"1\";\r\n    }, 0);\r\n}\r\n/**\r\n * Toggles the class(es) for a given HTML element\r\n * @param element The element for which the class should be toggled\r\n * @param className The name of the given class, or array of names\r\n */\r\nexport function ToggleClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (Array.isArray(className)) {\r\n        className.forEach(name => {\r\n            element.classList.toggle(name);\r\n        });\r\n    }\r\n    else {\r\n        element.classList.toggle(className);\r\n    }\r\n}\r\n/**\r\n * Get all siblings for a given element\r\n *\r\n * @param element The element to look for siblings\r\n * @param mode The type of siblings to look for (previous or next)\r\n */\r\nexport function GetElementSiblings(element, mode = SiblingTypes.Next) {\r\n    if (!element) {\r\n        return [];\r\n    }\r\n    const siblings = [];\r\n    if (mode === SiblingTypes.Previous) {\r\n        while (element = element.previousElementSibling) {\r\n            siblings.push(element);\r\n        }\r\n    }\r\n    else if (mode === SiblingTypes.Next) {\r\n        while (element = element.nextElementSibling) {\r\n            siblings.push(element);\r\n        }\r\n    }\r\n    return siblings;\r\n}\r\n","export var SiblingTypes;\r\n(function (SiblingTypes) {\r\n    SiblingTypes[\"Previous\"] = \"previous\";\r\n    SiblingTypes[\"Next\"] = \"next\";\r\n})(SiblingTypes || (SiblingTypes = {}));\r\n;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * All front-end modules are bundled into one application\r\n */\r\nimport Cart from \"./atoms/cart\";\r\nimport CustomMap from \"./atoms/map\";\r\nimport Menu from \"./atoms/menu\";\r\nimport Modal from \"./atoms/modal\";\r\nimport Rate from \"./atoms/rate\";\r\nimport Scroll from \"./atoms/scroll\";\r\nimport Search from \"./atoms/search\";\r\nimport Share from \"./atoms/share\";\r\nimport Tabs from \"./atoms/tabs\";\r\nimport Header from \"./molecules/header\";\r\nimport Posts from \"./molecules/posts\";\r\nimport Slider from \"./molecules/slider\";\r\nimport { InitParallax, InitScrollReveal } from \"./other/modules\";\r\n/**\r\n * Core class responsible for booting the application\r\n */\r\nclass WPC_App {\r\n    constructor() {\r\n        this.modules = [\r\n            Header, Slider, Posts, Tabs, Search, Scroll, Rate, Modal, Menu, CustomMap, Share, Cart\r\n        ];\r\n        this.initialize();\r\n    }\r\n    /**\r\n     * Executes all code after the DOM has loaded\r\n     */\r\n    initialize() {\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            for (const key in this.modules) {\r\n                this.modules[key].init();\r\n            }\r\n            this.initScrollReveal();\r\n            this.initParallax();\r\n        });\r\n    }\r\n    /**\r\n     * Initializes our scroll-reveal functionality\r\n     */\r\n    initScrollReveal() {\r\n        InitScrollReveal();\r\n    }\r\n    /**\r\n     * Initializes the parallax functionality\r\n     */\r\n    initParallax() {\r\n        InitParallax();\r\n    }\r\n}\r\n;\r\nnew WPC_App();\r\n"],"names":[],"sourceRoot":""}